<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical" >

    <RelativeLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent" >

        <TabHost
            android:id="@android:id/tabhost"
            android:layout_width="match_parent"
            android:layout_height="match_parent" >

            <TabWidget
                android:id="@android:id/tabs"
                android:layout_width="match_parent"
                android:layout_height="60px"
                android:layout_gravity="bottom" >
            </TabWidget>

            <FrameLayout
                android:id="@android:id/tabcontent"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:layout_marginBottom="60px" >
            </FrameLayout>
        </TabHost>
    </RelativeLayout>

</LinearLayout>

重点代码：
mTabHost = getTabHost();
mTabHost.addTab(spec);  

TabSpec spec = mTabHost.newTabSpec("mydouban");
spec.setContent(intent);  //打开那个activity的意图
						  //也可以传入view的ID spec.setContent(viewId)---->最后这些view还是被放到@android:id/tabcontent里面
spec.setIndicator();  注意：这个方法也是重载函数 可以穿view  也可以传入（charSequence，图片resId）


public class MainTabActivity extends TabActivity {
	private TabHost mTabHost;
	private LayoutInflater inflater;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.main_tab);
		inflater =  LayoutInflater.from(this);
		
		mTabHost = getTabHost();
		mTabHost.addTab(getMyDoubanTab());
		mTabHost.addTab(getNewBookTab());
	   //mTabHost.setCurrentTabByTag("newbook");
	}
 
	
	
	private TabSpec getMyDoubanTab(){
		TabSpec spec = mTabHost.newTabSpec("mydouban");
		//指定标签显示的内容 , 激活的activity对应的intent对象
		Intent intent = new Intent(this,MeActivity.class);
		spec.setContent(intent);
		// 设置标签的文字和样式
		spec.setIndicator(getIndicatorView("我的豆瓣",R.drawable.tab_main_nav_me));
		return spec;
	}
	private TabSpec getNewBookTab(){
		TabSpec spec = mTabHost.newTabSpec("newbook");
		//指定标签显示的内容 , 激活的activity对应的intent对象
		Intent intent = new Intent(this,TestActivity1.class);
		spec.setContent(intent);
		// 设置标签的文字和样式
		spec.setIndicator(getIndicatorView("豆瓣新书",R.drawable.tab_main_nav_book));
		return spec;
	}
	
	/**
	 * 获取条目显示的view对象 
	 */
	private View getIndicatorView(String name, int iconid){
		View view = inflater.inflate(R.layout.tab_main_nav, null);
	    ImageView ivicon =	(ImageView) view.findViewById(R.id.ivIcon);
	    TextView tvtitle =	(TextView) view.findViewById(R.id.tvTitle);
	    ivicon.setImageResource(iconid);
	    tvtitle.setText(name);
	    return view;
	}
}
